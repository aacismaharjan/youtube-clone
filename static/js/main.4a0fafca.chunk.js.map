{"version":3,"sources":["components/Card.jsx","api/index.js","components/Cards.jsx","components/Drawer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","boxShadow","background","media","height","paddingTop","avatar","backgroundColor","red","header","alignItems","padding","bold","fontWeight","RecipeReviewCard","card","classes","subheaderjsx","Typography","variant","className","name","Card","CardMedia","image","thumbnail","title","CardHeader","Avatar","aria-label","charAt","action","IconButton","Box","style","fontSize","letterSpacing","subheader","fetchVideos","a","URL","fetch","then","res","json","items","map","item","snippet","channelTitle","thumbnails","medium","url","date","publishedAt","video","id","catch","err","console","log","Cards","state","videos","this","setState","Grid","container","spacing","justifyItems","length","index","xs","sm","md","lg","xl","key","Component","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","color","borderBottom","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","MiniDrawer","props","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","onClick","edge","src","alt","Drawer","paper","direction","Divider","List","text","ListItem","button","ListItemIcon","ListItemText","primary","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mYAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,OACVC,UAAW,OACXC,WAAY,eAEdC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,gBAAiBC,IAAI,MAEvBC,OAAQ,CACNC,WAAY,aACZC,QAAS,mBAEXC,KAAM,CACJC,WAAY,WAID,SAASC,EAAT,GAAqC,IAATC,EAAQ,EAARA,KACnCC,EAAUpB,IAEVqB,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAWJ,EAAQJ,MAC5CG,EAAKM,MAER,kBAACH,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAWJ,EAAQJ,MAA/C,8BAMJ,OACE,kBAACU,EAAA,EAAD,CAAMF,UAAWJ,EAAQjB,MACvB,kBAACwB,EAAA,EAAD,CACEH,UAAWJ,EAAQb,MACnBqB,MAAOT,EAAKU,UACZC,MAAM,gBAGR,kBAACC,EAAA,EAAD,CACErB,OACE,kBAACsB,EAAA,EAAD,CAAQC,aAAW,SAAST,UAAWJ,EAAQV,QAC5CS,EAAKM,KAAKS,OAAO,IAGtBC,OACE,kBAACC,EAAA,EAAD,CAAYH,aAAW,YACrB,kBAAC,IAAD,OAGJH,MACE,kBAACO,EAAA,EAAD,CACEC,MAAO,CACLrB,WAAY,MACZsB,SAAU,OACVC,cAAe,YAGhBrB,EAAKW,OAGVW,UAAWpB,EACXG,UAAWJ,EAAQP,UC/E3B,IAAM6B,EAAW,uCAAG,4BAAAC,EAAA,4DACN,0CACNC,EAFY,wGACN,2CADM,SAILC,MAAMD,GAChBE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,YAQJ,OARmB,EAAZG,MACcC,KAAI,SAACC,GAAD,MAAW,CAClC1B,KAAM0B,EAAKC,QAAQC,aACnBxB,UAAWsB,EAAKC,QAAQE,WAAWC,OAAOC,IAC1C1B,MAAOqB,EAAKC,QAAQtB,MACpB2B,KAAMN,EAAKC,QAAQM,YACnBC,MAAOR,EAAKS,UAIfC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAhBZ,mFAAH,qD,SCKIG,E,4MACnBC,MAAQ,CACNC,OAAQ,I,kMAIazB,I,OAAfyB,E,OACNC,KAAKC,SAAS,CAAEF,W,qIAGR,IACAA,EAAWC,KAAKF,MAAhBC,OACR,OACE,kBAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,aAAa,UACtCN,EAAOO,QACNP,EAAOjB,KAAI,SAAC/B,EAAMwD,GAAP,OACT,kBAACL,EAAA,EAAD,CAAMnB,MAAI,EAACyB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1C,kBAAC,EAAD,CAAWC,IAAKN,EAAOxD,KAAMA,a,GAjBR+D,a,6MCiB7BlF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJgF,QAAS,QAEXC,OAAO,aACLC,OAAQnF,EAAMmF,OAAOC,OAAS,EAC9BC,WAAYrF,EAAMsF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxF,EAAMsF,YAAYE,OAAOC,MACjCC,SAAU1F,EAAMsF,YAAYI,SAASC,gBAEvCxF,UAAW,OACXyF,MAAO,UACPxF,WAAY,4BACZyF,aAAc,uBATV,aAUQ,QAEdC,YAAa,CACXC,WAnBgB,IAoBhBC,MAAM,eAAD,OApBW,IAoBX,OACLX,WAAYrF,EAAMsF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxF,EAAMsF,YAAYE,OAAOC,MACjCC,SAAU1F,EAAMsF,YAAYI,SAASO,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJnB,QAAS,QAEXG,OAAQ,CACNY,MAjCgB,IAkChBK,WAAY,EACZC,WAAY,SACZjB,WAAY,QAEdkB,WAAY,CACVP,MAvCgB,IAwChBX,WAAYrF,EAAMsF,YAAYC,OAAO,QAAS,CAC5CC,OAAQxF,EAAMsF,YAAYE,OAAOC,MACjCC,SAAU1F,EAAMsF,YAAYI,SAASO,kBAGzCO,YAAY,aACVnB,WAAYrF,EAAMsF,YAAYC,OAAO,QAAS,CAC5CC,OAAQxF,EAAMsF,YAAYE,OAAOC,MACjCC,SAAU1F,EAAMsF,YAAYI,SAASC,gBAEvCc,UAAW,SACXT,MAAOhG,EAAMsE,QAAQ,GAAK,GACzBtE,EAAM0G,YAAYC,GAAG,MAAQ,CAC5BX,MAAOhG,EAAMsE,QAAQ,GAAK,IAG9BsC,QAAQ,aACN3B,QAAS,OACTrE,WAAY,SACZiG,eAAgB,WAChBhG,QAASb,EAAMsE,QAAQ,EAAG,IAEvBtE,EAAM8G,OAAOF,SAElBG,QAAS,CACPC,SAAU,EACVnG,QAASb,EAAMsE,QAAQ,QAIZ,SAAS2C,GAAWC,GAAQ,IAAD,IAClChG,EAAUpB,KACVE,EAAQmH,cAF0B,EAGhBC,IAAMC,UAAS,GAHC,mBAGjCC,EAHiC,KAG3BC,EAH2B,KAaxC,OACE,yBAAKjG,UAAWJ,EAAQjB,MACtB,kBAACuH,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACTpG,UAAWqG,YAAKzG,EAAQgE,OAAT,eACZhE,EAAQ4E,YAAcwB,KAGzB,kBAACM,EAAA,EAAD,KACE,kBAAC1F,EAAA,EAAD,CACE0D,MAAM,UACN7D,aAAW,cACX8F,QArBe,WACvBN,GAAQ,IAqBAO,KAAK,QACLxG,UAAWqG,YAAKzG,EAAQgF,WAAT,eACZhF,EAAQkF,KAAOkB,KAGlB,kBAAC,IAAD,OAEF,yBACES,IAAI,4EACJC,IAAI,MACJ1H,OAAO,SAIb,kBAAC2H,EAAA,EAAD,CACE5G,QAAQ,YACRC,UAAWqG,YAAKzG,EAAQkE,QAAT,mBACZlE,EAAQqF,WAAae,GADT,cAEZpG,EAAQsF,aAAec,GAFX,IAIfpG,QAAS,CACPgH,MAAOP,aAAI,mBACRzG,EAAQqF,WAAae,GADb,cAERpG,EAAQsF,aAAec,GAFf,MAMb,yBAAKhG,UAAWJ,EAAQ0F,SACtB,kBAAC1E,EAAA,EAAD,CAAY2F,QA9CM,WACxBN,GAAQ,KA8CqB,QAApBvH,EAAMmI,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CAAC,OAAQ,WAAY,iBAAiBrF,KAAI,SAACsF,EAAM7D,GAAP,OACzC,kBAAC8D,EAAA,EAAD,CAAUC,QAAM,EAACzD,IAAKuD,GACpB,kBAACG,EAAA,EAAD,KACGhE,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OAErC,kBAACiE,EAAA,EAAD,CAAcC,QAASL,SAI7B,kBAACF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACG,CACC,UACA,UACA,cACA,cACA,eACA,aACArF,KAAI,SAACsF,EAAM7D,GAAP,OACJ,kBAAC8D,EAAA,EAAD,CAAUC,QAAM,EAACzD,IAAKuD,GACpB,kBAACG,EAAA,EAAD,KACGhE,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OAErC,kBAACiE,EAAA,EAAD,CAAcC,QAASL,UAK/B,0BAAMhH,UAAWJ,EAAQ6F,SACvB,yBAAKzF,UAAWJ,EAAQ0F,UACvBM,EAAM0B,WC1KAC,OAVf,WACE,OACE,6BACE,kBAAC5B,GAAD,KACE,kBAAC,EAAD,SCGY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9G,MAAK,SAAA+G,GACJA,EAAaC,gBAEdjG,OAAM,SAAAkG,GACLhG,QAAQgG,MAAMA,EAAMC,c","file":"static/js/main.4a0fafca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"100%\",\r\n    boxShadow: \"none\",\r\n    background: \"transparent\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  header: {\r\n    alignItems: \"flex-start\",\r\n    padding: \"16px 8px 16px 0\",\r\n  },\r\n  bold: {\r\n    fontWeight: \"500\",\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard({ card }) {\r\n  const classes = useStyles();\r\n\r\n  const subheaderjsx = (\r\n    <div>\r\n      <Typography variant=\"body2\" className={classes.bold}>\r\n        {card.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\" className={classes.bold}>\r\n        2.5M views . 3 months ago\r\n      </Typography>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={card.thumbnail}\r\n        title=\"Paella dish\"\r\n      />\r\n\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {card.name.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={\r\n          <Box\r\n            style={{\r\n              fontWeight: \"500\",\r\n              fontSize: \"15px\",\r\n              letterSpacing: \"0.005em\",\r\n            }}\r\n          >\r\n            {card.title}\r\n          </Box>\r\n        }\r\n        subheader={subheaderjsx}\r\n        className={classes.header}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","const fetchVideos = async () => {\r\n  const API = \"AIzaSyBw0xffhY84HE6GS_CRvmPAQZswmzRYjAQ\";\r\n  const URL = `https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=${API}`;\r\n\r\n  return await fetch(URL)\r\n    .then((res) => res.json())\r\n    .then(({ items }) => {\r\n      const videos = items.map((item) => ({\r\n        name: item.snippet.channelTitle,\r\n        thumbnail: item.snippet.thumbnails.medium.url,\r\n        title: item.snippet.title,\r\n        date: item.snippet.publishedAt,\r\n        video: item.id,\r\n      }));\r\n      return videos;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport { fetchVideos };\r\n","import React, { Component } from \"react\";\r\nimport VideoCard from \"./Card\";\r\nimport { fetchVideos } from \"../api/\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\n\r\nexport default class Cards extends Component {\r\n  state = {\r\n    videos: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const videos = await fetchVideos();\r\n    this.setState({ videos });\r\n  }\r\n\r\n  render() {\r\n    const { videos } = this.state;\r\n    return (\r\n      <Grid container spacing={2} justifyItems=\"center\">\r\n        {videos.length &&\r\n          videos.map((card, index) => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n              <VideoCard key={index} card={card} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    boxShadow: \"none\",\r\n    color: \"#606060\",\r\n    background: \"rgba(255, 255, 255, 0.97)\",\r\n    borderBottom: \"1px solid lightgray\",\r\n    transition: \"none\",\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    transition: \"none\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/b/b8/YouTube_Logo_2017.svg\"\r\n            alt=\"Img\"\r\n            height=\"25\"\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\"Home\", \"Trending\", \"Subscriptions\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            \"Library\",\r\n            \"History\",\r\n            \"Your videos\",\r\n            \"Watch later\",\r\n            \"Liked Videos\",\r\n            \"Show more\",\r\n          ].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards\";\nimport MiniDrawer from \"./components/Drawer\";\n\nfunction App() {\n  return (\n    <div>\n      <MiniDrawer>\n        <Cards />\n      </MiniDrawer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}